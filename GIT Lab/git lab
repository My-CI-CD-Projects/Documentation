//////////////////////////////Build a protected workflow for your project//////////////////////////////////////

01) Create the (Development) group

On the left sidebar, at the top, select Create new (  ) and New group.
Set the Visibility level to Private.
Skip inviting members to the group. 
Select Create group

02) Create subgroups in (Development) the created group

On the overview page for the Development group, in the upper-right corner, select New subgroup.
Set the Visibility level to Private.
Select Create subgroup.
Set the Visibility level to Private.
Select Create subgroup.

Select the group
Select Manage > Members.
In the upper right, select Invite a group.
For Select a group to invite
When adding the subgroups select the role
Select Invite.


03) Add users to the subgroups

Search or go to and search for frontend
Select Manage > Members.
Select Invite members.
Select the Developer role by default
Select Invite.


04) Create the (Excelsior) project

on the left sidebar, at the top, select Create new ( + ) and In this group > New project/repository.
Select Create blank project.
Enter the project details:
In the Project name field, enter Excelsior. The Project slug should auto-populate with excelsior.
For Visibility Level, select Public.
Select Initialize repository with a README to add an initial file to the repository.
Select Create project.


05) Add a basic (CODEOWNERS) file

On the left sidebar, select Search or go to and search for Excelsior. Select the project named Excelsior.
Next to the branch name, select the plus icon (  ), then New file:
For Filename, enter CODEOWNERS. 
Select Commit changes.


06) Configure approval rules

On the left sidebar, select Search or go to and search for Excelsior. Select the project named Excelsior.
Select Settings > Merge requests.
In the Merge request approvals section, scroll to Approval rules.
Select Add approval rule.
Create a rule named Enforce CODEOWNERS.
Select All protected branches.
To make the rule required in GitLab Premium and GitLab Ultimate, set the Approvals required to 1.
Add the managers group as approvers.
Select Add approval rule.
Scroll to Approval settings and make sure Prevent editing approval rules in merge requests is selected.
Select Save changes.


07) Enforce CODEOWNER approval on branches

On the left sidebar, select Search or go to and search for Excelsior. Select the project named Excelsior.

Select Settings > Repository.
Expand Protected branches.
From the Branch dropdown list, type 1.*, and then select Create wildcard 1.*.
To require everyone to submit merge requests, rather than pushing commits directly:
Set Allowed to merge to Maintainers.
Set Allowed to push and merge to No one.
Leave Allowed to force push disabled.
In GitLab Premium and GitLab Ultimate, to require Code Owners to review changes to files they work on, toggle Require approval from code owners.
Select Protect.
In the table of branches, find the rule marked as Default. (Depending on your version of GitLab, this branch might be named main or master.)
Set the values for this branch to match the settings you used for the 1.* rule.


08) Create the release branches

On the left sidebar, select Search or go to and search for Excelsior. Select the project named Excelsior.
Select Code > Branches.
In the upper-right corner, select New branch. Name it 1.0.0.
Select Create branch.
On the left sidebar, select Settings > Repository, then expand Branch rules to see details about all protected branches:


09) Before you begin
